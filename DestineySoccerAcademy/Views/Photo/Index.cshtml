
@{
    ViewBag.Title = "Our Gallery";
}

@Styles.Render("~/Content/gallery.css")

<h2>Index</h2>



<div id="app" data-state="gallery">
    <div class="gallery">
       
        <figure class="gallery-image">
            <img src="~/Image/img1.jpg" width="800" height="800" />
            <figcaption>1</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img2.jpg" width="800" height="600" />
            <figcaption>2</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img3.jpg" width="800" height="400" />
            <figcaption>3</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img4.jpg" width="800" height="600" />
            <figcaption>4</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img5.jpg" width="800" height="900" />
            <figcaption>5</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img6.jpg" width="800" height="600" />
            <figcaption>6</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img1.jpg" width="800" height="800" />
            <figcaption>1</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img2.jpg" width="800" height="600" />
            <figcaption>2</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img3.jpg" width="800" height="400" />
            <figcaption>3</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img4.jpg" width="800" height="600" />
            <figcaption>4</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img5.jpg" width="800" height="900" />
            <figcaption>5</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img6.jpg" width="800" height="600" />
            <figcaption>6</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img1.jpg" width="800" height="800" />
            <figcaption>1</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img2.jpg" width="800" height="600" />
            <figcaption>2</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img3.jpg" width="800" height="400" />
            <figcaption>3</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img4.jpg" width="800" height="600" />
            <figcaption>4</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img5.jpg" width="800" height="900" />
            <figcaption>5</figcaption>
        </figure>
        <figure class="gallery-image">
            <img src="~/Image/img6.jpg" width="800" height="600" />
            <figcaption>6</figcaption>
        </figure>
        
    </div>
    <div class="detail">
        <!--   cloned figure/image goes here!   -->
    </div>
</div>


@section scripts
{
    <script>

        console.clear();

        const elApp = document.querySelector("#app");

        const elImages = Array.from(document.querySelectorAll(".gallery-image"));

        const elDetail = document.querySelector(".detail");

        function flipImages(firstEl, lastEl, change) {
            const firstRect = firstEl.getBoundingClientRect();

            const lastRect = lastEl.getBoundingClientRect();

            // INVERT
            const deltaX = firstRect.left - lastRect.left;
            const deltaY = firstRect.top - lastRect.top;
            const deltaW = firstRect.width / lastRect.width;
            const deltaH = firstRect.height / lastRect.height;

            change();
            lastEl.parentElement.dataset.flipping = true;

            const animation = lastEl.animate([
                {
                    transform: `translateX(${deltaX}px) translateY(${deltaY}px) scaleX(${deltaW}) scaleY(${deltaH})`
                },
                {
                    transform: 'none'
                }
            ], {
                duration: 600, // milliseconds
                easing: 'cubic-bezier(.2, 0, .3, 1)'
            });

            animation.onfinish = () => {
                delete lastEl.parentElement.dataset.flipping;
            }

        }

        elImages.forEach(figure => {

            figure.addEventListener("click", () => {
                const elImage = figure.querySelector('img');

                elDetail.innerHTML = "";

                const elClone = figure.cloneNode(true);
                elDetail.appendChild(elClone);

                const elCloneImage = elClone.querySelector('img');

                flipImages(elImage, elCloneImage, () => {
                    elApp.dataset.state = "detail";
                });

                function revert() {

                    flipImages(elCloneImage, elImage, () => {
                        elApp.dataset.state = "gallery";
                        elDetail.removeEventListener('click', revert);
                    });

                }

                elDetail.addEventListener('click', revert);

            });
        });

    </script>
}